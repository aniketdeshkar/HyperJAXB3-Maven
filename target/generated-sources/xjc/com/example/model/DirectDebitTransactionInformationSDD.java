//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.06.01 at 02:41:38 PM IST 
//


package com.example.model;

import java.io.Serializable;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for DirectDebitTransactionInformationSDD complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="DirectDebitTransactionInformationSDD">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="PmtId" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.002.02}PaymentIdentificationSEPA"/>
 *         &lt;element name="InstdAmt" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.002.02}ActiveOrHistoricCurrencyAndAmountSEPA"/>
 *         &lt;element name="ChrgBr" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.002.02}ChargeBearerTypeSEPACode" minOccurs="0"/>
 *         &lt;element name="DrctDbtTx" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.002.02}DirectDebitTransactionSDD"/>
 *         &lt;element name="UltmtCdtr" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.002.02}PartyIdentificationSEPA1" minOccurs="0"/>
 *         &lt;element name="DbtrAgt" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.002.02}BranchAndFinancialInstitutionIdentificationSEPA1"/>
 *         &lt;element name="Dbtr" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.002.02}PartyIdentificationSEPA2"/>
 *         &lt;element name="DbtrAcct" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.002.02}CashAccountSEPA2"/>
 *         &lt;element name="UltmtDbtr" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.002.02}PartyIdentificationSEPA1" minOccurs="0"/>
 *         &lt;element name="Purp" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.002.02}PurposeSEPA" minOccurs="0"/>
 *         &lt;element name="RmtInf" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.002.02}RemittanceInformationSEPA1Choice" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DirectDebitTransactionInformationSDD", propOrder = {
    "pmtId",
    "instdAmt",
    "chrgBr",
    "drctDbtTx",
    "ultmtCdtr",
    "dbtrAgt",
    "dbtr",
    "dbtrAcct",
    "ultmtDbtr",
    "purp",
    "rmtInf"
})
@Entity(name = "DirectDebitTransactionInformationSDD")
@Table(name = "DIRECTDEBITTRANSACTIONINFORM_0")
@Inheritance(strategy = InheritanceType.JOINED)
public class DirectDebitTransactionInformationSDD
    implements Serializable, Equals, HashCode
{

    @XmlElement(name = "PmtId", required = true)
    protected PaymentIdentificationSEPA pmtId;
    @XmlElement(name = "InstdAmt", required = true)
    protected ActiveOrHistoricCurrencyAndAmountSEPA instdAmt;
    @XmlElement(name = "ChrgBr")
    protected ChargeBearerTypeSEPACode chrgBr;
    @XmlElement(name = "DrctDbtTx", required = true)
    protected DirectDebitTransactionSDD drctDbtTx;
    @XmlElement(name = "UltmtCdtr")
    protected PartyIdentificationSEPA1 ultmtCdtr;
    @XmlElement(name = "DbtrAgt", required = true)
    protected BranchAndFinancialInstitutionIdentificationSEPA1 dbtrAgt;
    @XmlElement(name = "Dbtr", required = true)
    protected PartyIdentificationSEPA2 dbtr;
    @XmlElement(name = "DbtrAcct", required = true)
    protected CashAccountSEPA2 dbtrAcct;
    @XmlElement(name = "UltmtDbtr")
    protected PartyIdentificationSEPA1 ultmtDbtr;
    @XmlElement(name = "Purp")
    protected PurposeSEPA purp;
    @XmlElement(name = "RmtInf")
    protected RemittanceInformationSEPA1Choice rmtInf;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;

    /**
     * Gets the value of the pmtId property.
     * 
     * @return
     *     possible object is
     *     {@link PaymentIdentificationSEPA }
     *     
     */
    @ManyToOne(targetEntity = PaymentIdentificationSEPA.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PMTID_DIRECTDEBITTRANSACTION_0")
    public PaymentIdentificationSEPA getPmtId() {
        return pmtId;
    }

    /**
     * Sets the value of the pmtId property.
     * 
     * @param value
     *     allowed object is
     *     {@link PaymentIdentificationSEPA }
     *     
     */
    public void setPmtId(PaymentIdentificationSEPA value) {
        this.pmtId = value;
    }

    /**
     * Gets the value of the instdAmt property.
     * 
     * @return
     *     possible object is
     *     {@link ActiveOrHistoricCurrencyAndAmountSEPA }
     *     
     */
    @ManyToOne(targetEntity = ActiveOrHistoricCurrencyAndAmountSEPA.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "INSTDAMT_DIRECTDEBITTRANSACT_0")
    public ActiveOrHistoricCurrencyAndAmountSEPA getInstdAmt() {
        return instdAmt;
    }

    /**
     * Sets the value of the instdAmt property.
     * 
     * @param value
     *     allowed object is
     *     {@link ActiveOrHistoricCurrencyAndAmountSEPA }
     *     
     */
    public void setInstdAmt(ActiveOrHistoricCurrencyAndAmountSEPA value) {
        this.instdAmt = value;
    }

    /**
     * Gets the value of the chrgBr property.
     * 
     * @return
     *     possible object is
     *     {@link ChargeBearerTypeSEPACode }
     *     
     */
    @Basic
    @Column(name = "CHRGBR", length = 255)
    @Enumerated(EnumType.STRING)
    public ChargeBearerTypeSEPACode getChrgBr() {
        return chrgBr;
    }

    /**
     * Sets the value of the chrgBr property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChargeBearerTypeSEPACode }
     *     
     */
    public void setChrgBr(ChargeBearerTypeSEPACode value) {
        this.chrgBr = value;
    }

    /**
     * Gets the value of the drctDbtTx property.
     * 
     * @return
     *     possible object is
     *     {@link DirectDebitTransactionSDD }
     *     
     */
    @ManyToOne(targetEntity = DirectDebitTransactionSDD.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DRCTDBTTX_DIRECTDEBITTRANSAC_0")
    public DirectDebitTransactionSDD getDrctDbtTx() {
        return drctDbtTx;
    }

    /**
     * Sets the value of the drctDbtTx property.
     * 
     * @param value
     *     allowed object is
     *     {@link DirectDebitTransactionSDD }
     *     
     */
    public void setDrctDbtTx(DirectDebitTransactionSDD value) {
        this.drctDbtTx = value;
    }

    /**
     * Gets the value of the ultmtCdtr property.
     * 
     * @return
     *     possible object is
     *     {@link PartyIdentificationSEPA1 }
     *     
     */
    @ManyToOne(targetEntity = PartyIdentificationSEPA1 .class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ULTMTCDTR_DIRECTDEBITTRANSAC_0")
    public PartyIdentificationSEPA1 getUltmtCdtr() {
        return ultmtCdtr;
    }

    /**
     * Sets the value of the ultmtCdtr property.
     * 
     * @param value
     *     allowed object is
     *     {@link PartyIdentificationSEPA1 }
     *     
     */
    public void setUltmtCdtr(PartyIdentificationSEPA1 value) {
        this.ultmtCdtr = value;
    }

    /**
     * Gets the value of the dbtrAgt property.
     * 
     * @return
     *     possible object is
     *     {@link BranchAndFinancialInstitutionIdentificationSEPA1 }
     *     
     */
    @ManyToOne(targetEntity = BranchAndFinancialInstitutionIdentificationSEPA1 .class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DBTRAGT_DIRECTDEBITTRANSACTI_0")
    public BranchAndFinancialInstitutionIdentificationSEPA1 getDbtrAgt() {
        return dbtrAgt;
    }

    /**
     * Sets the value of the dbtrAgt property.
     * 
     * @param value
     *     allowed object is
     *     {@link BranchAndFinancialInstitutionIdentificationSEPA1 }
     *     
     */
    public void setDbtrAgt(BranchAndFinancialInstitutionIdentificationSEPA1 value) {
        this.dbtrAgt = value;
    }

    /**
     * Gets the value of the dbtr property.
     * 
     * @return
     *     possible object is
     *     {@link PartyIdentificationSEPA2 }
     *     
     */
    @ManyToOne(targetEntity = PartyIdentificationSEPA2 .class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DBTR_DIRECTDEBITTRANSACTIONI_0")
    public PartyIdentificationSEPA2 getDbtr() {
        return dbtr;
    }

    /**
     * Sets the value of the dbtr property.
     * 
     * @param value
     *     allowed object is
     *     {@link PartyIdentificationSEPA2 }
     *     
     */
    public void setDbtr(PartyIdentificationSEPA2 value) {
        this.dbtr = value;
    }

    /**
     * Gets the value of the dbtrAcct property.
     * 
     * @return
     *     possible object is
     *     {@link CashAccountSEPA2 }
     *     
     */
    @ManyToOne(targetEntity = CashAccountSEPA2 .class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DBTRACCT_DIRECTDEBITTRANSACT_0")
    public CashAccountSEPA2 getDbtrAcct() {
        return dbtrAcct;
    }

    /**
     * Sets the value of the dbtrAcct property.
     * 
     * @param value
     *     allowed object is
     *     {@link CashAccountSEPA2 }
     *     
     */
    public void setDbtrAcct(CashAccountSEPA2 value) {
        this.dbtrAcct = value;
    }

    /**
     * Gets the value of the ultmtDbtr property.
     * 
     * @return
     *     possible object is
     *     {@link PartyIdentificationSEPA1 }
     *     
     */
    @ManyToOne(targetEntity = PartyIdentificationSEPA1 .class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ULTMTDBTR_DIRECTDEBITTRANSAC_0")
    public PartyIdentificationSEPA1 getUltmtDbtr() {
        return ultmtDbtr;
    }

    /**
     * Sets the value of the ultmtDbtr property.
     * 
     * @param value
     *     allowed object is
     *     {@link PartyIdentificationSEPA1 }
     *     
     */
    public void setUltmtDbtr(PartyIdentificationSEPA1 value) {
        this.ultmtDbtr = value;
    }

    /**
     * Gets the value of the purp property.
     * 
     * @return
     *     possible object is
     *     {@link PurposeSEPA }
     *     
     */
    @ManyToOne(targetEntity = PurposeSEPA.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PURP_DIRECTDEBITTRANSACTIONI_0")
    public PurposeSEPA getPurp() {
        return purp;
    }

    /**
     * Sets the value of the purp property.
     * 
     * @param value
     *     allowed object is
     *     {@link PurposeSEPA }
     *     
     */
    public void setPurp(PurposeSEPA value) {
        this.purp = value;
    }

    /**
     * Gets the value of the rmtInf property.
     * 
     * @return
     *     possible object is
     *     {@link RemittanceInformationSEPA1Choice }
     *     
     */
    @ManyToOne(targetEntity = RemittanceInformationSEPA1Choice.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "RMTINF_DIRECTDEBITTRANSACTIO_0")
    public RemittanceInformationSEPA1Choice getRmtInf() {
        return rmtInf;
    }

    /**
     * Sets the value of the rmtInf property.
     * 
     * @param value
     *     allowed object is
     *     {@link RemittanceInformationSEPA1Choice }
     *     
     */
    public void setRmtInf(RemittanceInformationSEPA1Choice value) {
        this.rmtInf = value;
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof DirectDebitTransactionInformationSDD)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final DirectDebitTransactionInformationSDD that = ((DirectDebitTransactionInformationSDD) object);
        {
            PaymentIdentificationSEPA lhsPmtId;
            lhsPmtId = this.getPmtId();
            PaymentIdentificationSEPA rhsPmtId;
            rhsPmtId = that.getPmtId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pmtId", lhsPmtId), LocatorUtils.property(thatLocator, "pmtId", rhsPmtId), lhsPmtId, rhsPmtId)) {
                return false;
            }
        }
        {
            ActiveOrHistoricCurrencyAndAmountSEPA lhsInstdAmt;
            lhsInstdAmt = this.getInstdAmt();
            ActiveOrHistoricCurrencyAndAmountSEPA rhsInstdAmt;
            rhsInstdAmt = that.getInstdAmt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "instdAmt", lhsInstdAmt), LocatorUtils.property(thatLocator, "instdAmt", rhsInstdAmt), lhsInstdAmt, rhsInstdAmt)) {
                return false;
            }
        }
        {
            ChargeBearerTypeSEPACode lhsChrgBr;
            lhsChrgBr = this.getChrgBr();
            ChargeBearerTypeSEPACode rhsChrgBr;
            rhsChrgBr = that.getChrgBr();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "chrgBr", lhsChrgBr), LocatorUtils.property(thatLocator, "chrgBr", rhsChrgBr), lhsChrgBr, rhsChrgBr)) {
                return false;
            }
        }
        {
            DirectDebitTransactionSDD lhsDrctDbtTx;
            lhsDrctDbtTx = this.getDrctDbtTx();
            DirectDebitTransactionSDD rhsDrctDbtTx;
            rhsDrctDbtTx = that.getDrctDbtTx();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "drctDbtTx", lhsDrctDbtTx), LocatorUtils.property(thatLocator, "drctDbtTx", rhsDrctDbtTx), lhsDrctDbtTx, rhsDrctDbtTx)) {
                return false;
            }
        }
        {
            PartyIdentificationSEPA1 lhsUltmtCdtr;
            lhsUltmtCdtr = this.getUltmtCdtr();
            PartyIdentificationSEPA1 rhsUltmtCdtr;
            rhsUltmtCdtr = that.getUltmtCdtr();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ultmtCdtr", lhsUltmtCdtr), LocatorUtils.property(thatLocator, "ultmtCdtr", rhsUltmtCdtr), lhsUltmtCdtr, rhsUltmtCdtr)) {
                return false;
            }
        }
        {
            BranchAndFinancialInstitutionIdentificationSEPA1 lhsDbtrAgt;
            lhsDbtrAgt = this.getDbtrAgt();
            BranchAndFinancialInstitutionIdentificationSEPA1 rhsDbtrAgt;
            rhsDbtrAgt = that.getDbtrAgt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dbtrAgt", lhsDbtrAgt), LocatorUtils.property(thatLocator, "dbtrAgt", rhsDbtrAgt), lhsDbtrAgt, rhsDbtrAgt)) {
                return false;
            }
        }
        {
            PartyIdentificationSEPA2 lhsDbtr;
            lhsDbtr = this.getDbtr();
            PartyIdentificationSEPA2 rhsDbtr;
            rhsDbtr = that.getDbtr();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dbtr", lhsDbtr), LocatorUtils.property(thatLocator, "dbtr", rhsDbtr), lhsDbtr, rhsDbtr)) {
                return false;
            }
        }
        {
            CashAccountSEPA2 lhsDbtrAcct;
            lhsDbtrAcct = this.getDbtrAcct();
            CashAccountSEPA2 rhsDbtrAcct;
            rhsDbtrAcct = that.getDbtrAcct();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dbtrAcct", lhsDbtrAcct), LocatorUtils.property(thatLocator, "dbtrAcct", rhsDbtrAcct), lhsDbtrAcct, rhsDbtrAcct)) {
                return false;
            }
        }
        {
            PartyIdentificationSEPA1 lhsUltmtDbtr;
            lhsUltmtDbtr = this.getUltmtDbtr();
            PartyIdentificationSEPA1 rhsUltmtDbtr;
            rhsUltmtDbtr = that.getUltmtDbtr();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ultmtDbtr", lhsUltmtDbtr), LocatorUtils.property(thatLocator, "ultmtDbtr", rhsUltmtDbtr), lhsUltmtDbtr, rhsUltmtDbtr)) {
                return false;
            }
        }
        {
            PurposeSEPA lhsPurp;
            lhsPurp = this.getPurp();
            PurposeSEPA rhsPurp;
            rhsPurp = that.getPurp();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "purp", lhsPurp), LocatorUtils.property(thatLocator, "purp", rhsPurp), lhsPurp, rhsPurp)) {
                return false;
            }
        }
        {
            RemittanceInformationSEPA1Choice lhsRmtInf;
            lhsRmtInf = this.getRmtInf();
            RemittanceInformationSEPA1Choice rhsRmtInf;
            rhsRmtInf = that.getRmtInf();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rmtInf", lhsRmtInf), LocatorUtils.property(thatLocator, "rmtInf", rhsRmtInf), lhsRmtInf, rhsRmtInf)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            PaymentIdentificationSEPA thePmtId;
            thePmtId = this.getPmtId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pmtId", thePmtId), currentHashCode, thePmtId);
        }
        {
            ActiveOrHistoricCurrencyAndAmountSEPA theInstdAmt;
            theInstdAmt = this.getInstdAmt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "instdAmt", theInstdAmt), currentHashCode, theInstdAmt);
        }
        {
            ChargeBearerTypeSEPACode theChrgBr;
            theChrgBr = this.getChrgBr();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "chrgBr", theChrgBr), currentHashCode, theChrgBr);
        }
        {
            DirectDebitTransactionSDD theDrctDbtTx;
            theDrctDbtTx = this.getDrctDbtTx();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "drctDbtTx", theDrctDbtTx), currentHashCode, theDrctDbtTx);
        }
        {
            PartyIdentificationSEPA1 theUltmtCdtr;
            theUltmtCdtr = this.getUltmtCdtr();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ultmtCdtr", theUltmtCdtr), currentHashCode, theUltmtCdtr);
        }
        {
            BranchAndFinancialInstitutionIdentificationSEPA1 theDbtrAgt;
            theDbtrAgt = this.getDbtrAgt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dbtrAgt", theDbtrAgt), currentHashCode, theDbtrAgt);
        }
        {
            PartyIdentificationSEPA2 theDbtr;
            theDbtr = this.getDbtr();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dbtr", theDbtr), currentHashCode, theDbtr);
        }
        {
            CashAccountSEPA2 theDbtrAcct;
            theDbtrAcct = this.getDbtrAcct();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dbtrAcct", theDbtrAcct), currentHashCode, theDbtrAcct);
        }
        {
            PartyIdentificationSEPA1 theUltmtDbtr;
            theUltmtDbtr = this.getUltmtDbtr();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ultmtDbtr", theUltmtDbtr), currentHashCode, theUltmtDbtr);
        }
        {
            PurposeSEPA thePurp;
            thePurp = this.getPurp();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "purp", thePurp), currentHashCode, thePurp);
        }
        {
            RemittanceInformationSEPA1Choice theRmtInf;
            theRmtInf = this.getRmtInf();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rmtInf", theRmtInf), currentHashCode, theRmtInf);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
