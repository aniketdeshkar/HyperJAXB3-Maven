//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.06.01 at 02:41:38 PM IST 
//


package iso.std.iso._20022.tech.xsd.pain_008_001;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for RemittanceAmount1 complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RemittanceAmount1">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="DuePyblAmt" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}ActiveOrHistoricCurrencyAndAmount" minOccurs="0"/>
 *         &lt;element name="DscntApldAmt" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}ActiveOrHistoricCurrencyAndAmount" minOccurs="0"/>
 *         &lt;element name="CdtNoteAmt" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}ActiveOrHistoricCurrencyAndAmount" minOccurs="0"/>
 *         &lt;element name="TaxAmt" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}ActiveOrHistoricCurrencyAndAmount" minOccurs="0"/>
 *         &lt;element name="AdjstmntAmtAndRsn" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}DocumentAdjustment1" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="RmtdAmt" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}ActiveOrHistoricCurrencyAndAmount" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RemittanceAmount1", propOrder = {
    "duePyblAmt",
    "dscntApldAmt",
    "cdtNoteAmt",
    "taxAmt",
    "adjstmntAmtAndRsns",
    "rmtdAmt"
})
@Entity(name = "RemittanceAmount1")
@Table(name = "REMITTANCEAMOUNT1_0")
@Inheritance(strategy = InheritanceType.JOINED)
public class RemittanceAmount1
    implements Serializable, Equals, HashCode
{

    @XmlElement(name = "DuePyblAmt")
    protected ActiveOrHistoricCurrencyAndAmount duePyblAmt;
    @XmlElement(name = "DscntApldAmt")
    protected ActiveOrHistoricCurrencyAndAmount dscntApldAmt;
    @XmlElement(name = "CdtNoteAmt")
    protected ActiveOrHistoricCurrencyAndAmount cdtNoteAmt;
    @XmlElement(name = "TaxAmt")
    protected ActiveOrHistoricCurrencyAndAmount taxAmt;
    @XmlElement(name = "AdjstmntAmtAndRsn")
    protected List<DocumentAdjustment1> adjstmntAmtAndRsns;
    @XmlElement(name = "RmtdAmt")
    protected ActiveOrHistoricCurrencyAndAmount rmtdAmt;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;

    /**
     * Gets the value of the duePyblAmt property.
     * 
     * @return
     *     possible object is
     *     {@link ActiveOrHistoricCurrencyAndAmount }
     *     
     */
    @ManyToOne(targetEntity = ActiveOrHistoricCurrencyAndAmount.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DUEPYBLAMT_REMITTANCEAMOUNT1_1")
    public ActiveOrHistoricCurrencyAndAmount getDuePyblAmt() {
        return duePyblAmt;
    }

    /**
     * Sets the value of the duePyblAmt property.
     * 
     * @param value
     *     allowed object is
     *     {@link ActiveOrHistoricCurrencyAndAmount }
     *     
     */
    public void setDuePyblAmt(ActiveOrHistoricCurrencyAndAmount value) {
        this.duePyblAmt = value;
    }

    /**
     * Gets the value of the dscntApldAmt property.
     * 
     * @return
     *     possible object is
     *     {@link ActiveOrHistoricCurrencyAndAmount }
     *     
     */
    @ManyToOne(targetEntity = ActiveOrHistoricCurrencyAndAmount.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DSCNTAPLDAMT_REMITTANCEAMOUN_1")
    public ActiveOrHistoricCurrencyAndAmount getDscntApldAmt() {
        return dscntApldAmt;
    }

    /**
     * Sets the value of the dscntApldAmt property.
     * 
     * @param value
     *     allowed object is
     *     {@link ActiveOrHistoricCurrencyAndAmount }
     *     
     */
    public void setDscntApldAmt(ActiveOrHistoricCurrencyAndAmount value) {
        this.dscntApldAmt = value;
    }

    /**
     * Gets the value of the cdtNoteAmt property.
     * 
     * @return
     *     possible object is
     *     {@link ActiveOrHistoricCurrencyAndAmount }
     *     
     */
    @ManyToOne(targetEntity = ActiveOrHistoricCurrencyAndAmount.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CDTNOTEAMT_REMITTANCEAMOUNT1_1")
    public ActiveOrHistoricCurrencyAndAmount getCdtNoteAmt() {
        return cdtNoteAmt;
    }

    /**
     * Sets the value of the cdtNoteAmt property.
     * 
     * @param value
     *     allowed object is
     *     {@link ActiveOrHistoricCurrencyAndAmount }
     *     
     */
    public void setCdtNoteAmt(ActiveOrHistoricCurrencyAndAmount value) {
        this.cdtNoteAmt = value;
    }

    /**
     * Gets the value of the taxAmt property.
     * 
     * @return
     *     possible object is
     *     {@link ActiveOrHistoricCurrencyAndAmount }
     *     
     */
    @ManyToOne(targetEntity = ActiveOrHistoricCurrencyAndAmount.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TAXAMT_REMITTANCEAMOUNT1_0_H_0")
    public ActiveOrHistoricCurrencyAndAmount getTaxAmt() {
        return taxAmt;
    }

    /**
     * Sets the value of the taxAmt property.
     * 
     * @param value
     *     allowed object is
     *     {@link ActiveOrHistoricCurrencyAndAmount }
     *     
     */
    public void setTaxAmt(ActiveOrHistoricCurrencyAndAmount value) {
        this.taxAmt = value;
    }

    /**
     * Gets the value of the adjstmntAmtAndRsns property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the adjstmntAmtAndRsns property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAdjstmntAmtAndRsns().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DocumentAdjustment1 }
     * 
     * 
     */
    @OneToMany(targetEntity = DocumentAdjustment1 .class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ADJSTMNTAMTANDRSNS_REMITTANC_1")
    public List<DocumentAdjustment1> getAdjstmntAmtAndRsns() {
        if (adjstmntAmtAndRsns == null) {
            adjstmntAmtAndRsns = new ArrayList<DocumentAdjustment1>();
        }
        return this.adjstmntAmtAndRsns;
    }

    /**
     * 
     * 
     */
    public void setAdjstmntAmtAndRsns(List<DocumentAdjustment1> adjstmntAmtAndRsns) {
        this.adjstmntAmtAndRsns = adjstmntAmtAndRsns;
    }

    /**
     * Gets the value of the rmtdAmt property.
     * 
     * @return
     *     possible object is
     *     {@link ActiveOrHistoricCurrencyAndAmount }
     *     
     */
    @ManyToOne(targetEntity = ActiveOrHistoricCurrencyAndAmount.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "RMTDAMT_REMITTANCEAMOUNT1_0__0")
    public ActiveOrHistoricCurrencyAndAmount getRmtdAmt() {
        return rmtdAmt;
    }

    /**
     * Sets the value of the rmtdAmt property.
     * 
     * @param value
     *     allowed object is
     *     {@link ActiveOrHistoricCurrencyAndAmount }
     *     
     */
    public void setRmtdAmt(ActiveOrHistoricCurrencyAndAmount value) {
        this.rmtdAmt = value;
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof RemittanceAmount1)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final RemittanceAmount1 that = ((RemittanceAmount1) object);
        {
            ActiveOrHistoricCurrencyAndAmount lhsDuePyblAmt;
            lhsDuePyblAmt = this.getDuePyblAmt();
            ActiveOrHistoricCurrencyAndAmount rhsDuePyblAmt;
            rhsDuePyblAmt = that.getDuePyblAmt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "duePyblAmt", lhsDuePyblAmt), LocatorUtils.property(thatLocator, "duePyblAmt", rhsDuePyblAmt), lhsDuePyblAmt, rhsDuePyblAmt)) {
                return false;
            }
        }
        {
            ActiveOrHistoricCurrencyAndAmount lhsDscntApldAmt;
            lhsDscntApldAmt = this.getDscntApldAmt();
            ActiveOrHistoricCurrencyAndAmount rhsDscntApldAmt;
            rhsDscntApldAmt = that.getDscntApldAmt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dscntApldAmt", lhsDscntApldAmt), LocatorUtils.property(thatLocator, "dscntApldAmt", rhsDscntApldAmt), lhsDscntApldAmt, rhsDscntApldAmt)) {
                return false;
            }
        }
        {
            ActiveOrHistoricCurrencyAndAmount lhsCdtNoteAmt;
            lhsCdtNoteAmt = this.getCdtNoteAmt();
            ActiveOrHistoricCurrencyAndAmount rhsCdtNoteAmt;
            rhsCdtNoteAmt = that.getCdtNoteAmt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cdtNoteAmt", lhsCdtNoteAmt), LocatorUtils.property(thatLocator, "cdtNoteAmt", rhsCdtNoteAmt), lhsCdtNoteAmt, rhsCdtNoteAmt)) {
                return false;
            }
        }
        {
            ActiveOrHistoricCurrencyAndAmount lhsTaxAmt;
            lhsTaxAmt = this.getTaxAmt();
            ActiveOrHistoricCurrencyAndAmount rhsTaxAmt;
            rhsTaxAmt = that.getTaxAmt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "taxAmt", lhsTaxAmt), LocatorUtils.property(thatLocator, "taxAmt", rhsTaxAmt), lhsTaxAmt, rhsTaxAmt)) {
                return false;
            }
        }
        {
            List<DocumentAdjustment1> lhsAdjstmntAmtAndRsns;
            lhsAdjstmntAmtAndRsns = (((this.adjstmntAmtAndRsns!= null)&&(!this.adjstmntAmtAndRsns.isEmpty()))?this.getAdjstmntAmtAndRsns():null);
            List<DocumentAdjustment1> rhsAdjstmntAmtAndRsns;
            rhsAdjstmntAmtAndRsns = (((that.adjstmntAmtAndRsns!= null)&&(!that.adjstmntAmtAndRsns.isEmpty()))?that.getAdjstmntAmtAndRsns():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "adjstmntAmtAndRsns", lhsAdjstmntAmtAndRsns), LocatorUtils.property(thatLocator, "adjstmntAmtAndRsns", rhsAdjstmntAmtAndRsns), lhsAdjstmntAmtAndRsns, rhsAdjstmntAmtAndRsns)) {
                return false;
            }
        }
        {
            ActiveOrHistoricCurrencyAndAmount lhsRmtdAmt;
            lhsRmtdAmt = this.getRmtdAmt();
            ActiveOrHistoricCurrencyAndAmount rhsRmtdAmt;
            rhsRmtdAmt = that.getRmtdAmt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rmtdAmt", lhsRmtdAmt), LocatorUtils.property(thatLocator, "rmtdAmt", rhsRmtdAmt), lhsRmtdAmt, rhsRmtdAmt)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            ActiveOrHistoricCurrencyAndAmount theDuePyblAmt;
            theDuePyblAmt = this.getDuePyblAmt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "duePyblAmt", theDuePyblAmt), currentHashCode, theDuePyblAmt);
        }
        {
            ActiveOrHistoricCurrencyAndAmount theDscntApldAmt;
            theDscntApldAmt = this.getDscntApldAmt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dscntApldAmt", theDscntApldAmt), currentHashCode, theDscntApldAmt);
        }
        {
            ActiveOrHistoricCurrencyAndAmount theCdtNoteAmt;
            theCdtNoteAmt = this.getCdtNoteAmt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cdtNoteAmt", theCdtNoteAmt), currentHashCode, theCdtNoteAmt);
        }
        {
            ActiveOrHistoricCurrencyAndAmount theTaxAmt;
            theTaxAmt = this.getTaxAmt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "taxAmt", theTaxAmt), currentHashCode, theTaxAmt);
        }
        {
            List<DocumentAdjustment1> theAdjstmntAmtAndRsns;
            theAdjstmntAmtAndRsns = (((this.adjstmntAmtAndRsns!= null)&&(!this.adjstmntAmtAndRsns.isEmpty()))?this.getAdjstmntAmtAndRsns():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "adjstmntAmtAndRsns", theAdjstmntAmtAndRsns), currentHashCode, theAdjstmntAmtAndRsns);
        }
        {
            ActiveOrHistoricCurrencyAndAmount theRmtdAmt;
            theRmtdAmt = this.getRmtdAmt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rmtdAmt", theRmtdAmt), currentHashCode, theRmtdAmt);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
