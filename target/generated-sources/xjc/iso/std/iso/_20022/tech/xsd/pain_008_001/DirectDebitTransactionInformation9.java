//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.06.01 at 02:41:38 PM IST 
//


package iso.std.iso._20022.tech.xsd.pain_008_001;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for DirectDebitTransactionInformation9 complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="DirectDebitTransactionInformation9">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="PmtId" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}PaymentIdentification1"/>
 *         &lt;element name="PmtTpInf" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}PaymentTypeInformation20" minOccurs="0"/>
 *         &lt;element name="InstdAmt" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}ActiveOrHistoricCurrencyAndAmount"/>
 *         &lt;element name="ChrgBr" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}ChargeBearerType1Code" minOccurs="0"/>
 *         &lt;element name="DrctDbtTx" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}DirectDebitTransaction6" minOccurs="0"/>
 *         &lt;element name="UltmtCdtr" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}PartyIdentification32" minOccurs="0"/>
 *         &lt;element name="DbtrAgt" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}BranchAndFinancialInstitutionIdentification4"/>
 *         &lt;element name="DbtrAgtAcct" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}CashAccount16" minOccurs="0"/>
 *         &lt;element name="Dbtr" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}PartyIdentification32"/>
 *         &lt;element name="DbtrAcct" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}CashAccount16"/>
 *         &lt;element name="UltmtDbtr" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}PartyIdentification32" minOccurs="0"/>
 *         &lt;element name="InstrForCdtrAgt" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}Max140Text" minOccurs="0"/>
 *         &lt;element name="Purp" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}Purpose2Choice" minOccurs="0"/>
 *         &lt;element name="RgltryRptg" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}RegulatoryReporting3" maxOccurs="10" minOccurs="0"/>
 *         &lt;element name="Tax" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}TaxInformation3" minOccurs="0"/>
 *         &lt;element name="RltdRmtInf" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}RemittanceLocation2" maxOccurs="10" minOccurs="0"/>
 *         &lt;element name="RmtInf" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}RemittanceInformation5" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DirectDebitTransactionInformation9", propOrder = {
    "pmtId",
    "pmtTpInf",
    "instdAmt",
    "chrgBr",
    "drctDbtTx",
    "ultmtCdtr",
    "dbtrAgt",
    "dbtrAgtAcct",
    "dbtr",
    "dbtrAcct",
    "ultmtDbtr",
    "instrForCdtrAgt",
    "purp",
    "rgltryRptgs",
    "tax",
    "rltdRmtInves",
    "rmtInf"
})
@Entity(name = "DirectDebitTransactionInformation9")
@Table(name = "DIRECTDEBITTRANSACTIONINFORM_1")
@Inheritance(strategy = InheritanceType.JOINED)
public class DirectDebitTransactionInformation9
    implements Serializable, Equals, HashCode
{

    @XmlElement(name = "PmtId", required = true)
    protected PaymentIdentification1 pmtId;
    @XmlElement(name = "PmtTpInf")
    protected PaymentTypeInformation20 pmtTpInf;
    @XmlElement(name = "InstdAmt", required = true)
    protected ActiveOrHistoricCurrencyAndAmount instdAmt;
    @XmlElement(name = "ChrgBr")
    protected ChargeBearerType1Code chrgBr;
    @XmlElement(name = "DrctDbtTx")
    protected DirectDebitTransaction6 drctDbtTx;
    @XmlElement(name = "UltmtCdtr")
    protected PartyIdentification32 ultmtCdtr;
    @XmlElement(name = "DbtrAgt", required = true)
    protected BranchAndFinancialInstitutionIdentification4 dbtrAgt;
    @XmlElement(name = "DbtrAgtAcct")
    protected CashAccount16 dbtrAgtAcct;
    @XmlElement(name = "Dbtr", required = true)
    protected PartyIdentification32 dbtr;
    @XmlElement(name = "DbtrAcct", required = true)
    protected CashAccount16 dbtrAcct;
    @XmlElement(name = "UltmtDbtr")
    protected PartyIdentification32 ultmtDbtr;
    @XmlElement(name = "InstrForCdtrAgt")
    protected String instrForCdtrAgt;
    @XmlElement(name = "Purp")
    protected Purpose2Choice purp;
    @XmlElement(name = "RgltryRptg")
    protected List<RegulatoryReporting3> rgltryRptgs;
    @XmlElement(name = "Tax")
    protected TaxInformation3 tax;
    @XmlElement(name = "RltdRmtInf")
    protected List<RemittanceLocation2> rltdRmtInves;
    @XmlElement(name = "RmtInf")
    protected RemittanceInformation5 rmtInf;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;

    /**
     * Gets the value of the pmtId property.
     * 
     * @return
     *     possible object is
     *     {@link PaymentIdentification1 }
     *     
     */
    @ManyToOne(targetEntity = PaymentIdentification1 .class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PMTID_DIRECTDEBITTRANSACTION_1")
    public PaymentIdentification1 getPmtId() {
        return pmtId;
    }

    /**
     * Sets the value of the pmtId property.
     * 
     * @param value
     *     allowed object is
     *     {@link PaymentIdentification1 }
     *     
     */
    public void setPmtId(PaymentIdentification1 value) {
        this.pmtId = value;
    }

    /**
     * Gets the value of the pmtTpInf property.
     * 
     * @return
     *     possible object is
     *     {@link PaymentTypeInformation20 }
     *     
     */
    @ManyToOne(targetEntity = PaymentTypeInformation20 .class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PMTTPINF_DIRECTDEBITTRANSACT_0")
    public PaymentTypeInformation20 getPmtTpInf() {
        return pmtTpInf;
    }

    /**
     * Sets the value of the pmtTpInf property.
     * 
     * @param value
     *     allowed object is
     *     {@link PaymentTypeInformation20 }
     *     
     */
    public void setPmtTpInf(PaymentTypeInformation20 value) {
        this.pmtTpInf = value;
    }

    /**
     * Gets the value of the instdAmt property.
     * 
     * @return
     *     possible object is
     *     {@link ActiveOrHistoricCurrencyAndAmount }
     *     
     */
    @ManyToOne(targetEntity = ActiveOrHistoricCurrencyAndAmount.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "INSTDAMT_DIRECTDEBITTRANSACT_1")
    public ActiveOrHistoricCurrencyAndAmount getInstdAmt() {
        return instdAmt;
    }

    /**
     * Sets the value of the instdAmt property.
     * 
     * @param value
     *     allowed object is
     *     {@link ActiveOrHistoricCurrencyAndAmount }
     *     
     */
    public void setInstdAmt(ActiveOrHistoricCurrencyAndAmount value) {
        this.instdAmt = value;
    }

    /**
     * Gets the value of the chrgBr property.
     * 
     * @return
     *     possible object is
     *     {@link ChargeBearerType1Code }
     *     
     */
    @Basic
    @Column(name = "CHRGBR", length = 255)
    @Enumerated(EnumType.STRING)
    public ChargeBearerType1Code getChrgBr() {
        return chrgBr;
    }

    /**
     * Sets the value of the chrgBr property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChargeBearerType1Code }
     *     
     */
    public void setChrgBr(ChargeBearerType1Code value) {
        this.chrgBr = value;
    }

    /**
     * Gets the value of the drctDbtTx property.
     * 
     * @return
     *     possible object is
     *     {@link DirectDebitTransaction6 }
     *     
     */
    @ManyToOne(targetEntity = DirectDebitTransaction6 .class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DRCTDBTTX_DIRECTDEBITTRANSAC_1")
    public DirectDebitTransaction6 getDrctDbtTx() {
        return drctDbtTx;
    }

    /**
     * Sets the value of the drctDbtTx property.
     * 
     * @param value
     *     allowed object is
     *     {@link DirectDebitTransaction6 }
     *     
     */
    public void setDrctDbtTx(DirectDebitTransaction6 value) {
        this.drctDbtTx = value;
    }

    /**
     * Gets the value of the ultmtCdtr property.
     * 
     * @return
     *     possible object is
     *     {@link PartyIdentification32 }
     *     
     */
    @ManyToOne(targetEntity = PartyIdentification32 .class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ULTMTCDTR_DIRECTDEBITTRANSAC_1")
    public PartyIdentification32 getUltmtCdtr() {
        return ultmtCdtr;
    }

    /**
     * Sets the value of the ultmtCdtr property.
     * 
     * @param value
     *     allowed object is
     *     {@link PartyIdentification32 }
     *     
     */
    public void setUltmtCdtr(PartyIdentification32 value) {
        this.ultmtCdtr = value;
    }

    /**
     * Gets the value of the dbtrAgt property.
     * 
     * @return
     *     possible object is
     *     {@link BranchAndFinancialInstitutionIdentification4 }
     *     
     */
    @ManyToOne(targetEntity = BranchAndFinancialInstitutionIdentification4 .class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DBTRAGT_DIRECTDEBITTRANSACTI_1")
    public BranchAndFinancialInstitutionIdentification4 getDbtrAgt() {
        return dbtrAgt;
    }

    /**
     * Sets the value of the dbtrAgt property.
     * 
     * @param value
     *     allowed object is
     *     {@link BranchAndFinancialInstitutionIdentification4 }
     *     
     */
    public void setDbtrAgt(BranchAndFinancialInstitutionIdentification4 value) {
        this.dbtrAgt = value;
    }

    /**
     * Gets the value of the dbtrAgtAcct property.
     * 
     * @return
     *     possible object is
     *     {@link CashAccount16 }
     *     
     */
    @ManyToOne(targetEntity = CashAccount16 .class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DBTRAGTACCT_DIRECTDEBITTRANS_0")
    public CashAccount16 getDbtrAgtAcct() {
        return dbtrAgtAcct;
    }

    /**
     * Sets the value of the dbtrAgtAcct property.
     * 
     * @param value
     *     allowed object is
     *     {@link CashAccount16 }
     *     
     */
    public void setDbtrAgtAcct(CashAccount16 value) {
        this.dbtrAgtAcct = value;
    }

    /**
     * Gets the value of the dbtr property.
     * 
     * @return
     *     possible object is
     *     {@link PartyIdentification32 }
     *     
     */
    @ManyToOne(targetEntity = PartyIdentification32 .class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DBTR_DIRECTDEBITTRANSACTIONI_1")
    public PartyIdentification32 getDbtr() {
        return dbtr;
    }

    /**
     * Sets the value of the dbtr property.
     * 
     * @param value
     *     allowed object is
     *     {@link PartyIdentification32 }
     *     
     */
    public void setDbtr(PartyIdentification32 value) {
        this.dbtr = value;
    }

    /**
     * Gets the value of the dbtrAcct property.
     * 
     * @return
     *     possible object is
     *     {@link CashAccount16 }
     *     
     */
    @ManyToOne(targetEntity = CashAccount16 .class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DBTRACCT_DIRECTDEBITTRANSACT_1")
    public CashAccount16 getDbtrAcct() {
        return dbtrAcct;
    }

    /**
     * Sets the value of the dbtrAcct property.
     * 
     * @param value
     *     allowed object is
     *     {@link CashAccount16 }
     *     
     */
    public void setDbtrAcct(CashAccount16 value) {
        this.dbtrAcct = value;
    }

    /**
     * Gets the value of the ultmtDbtr property.
     * 
     * @return
     *     possible object is
     *     {@link PartyIdentification32 }
     *     
     */
    @ManyToOne(targetEntity = PartyIdentification32 .class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ULTMTDBTR_DIRECTDEBITTRANSAC_1")
    public PartyIdentification32 getUltmtDbtr() {
        return ultmtDbtr;
    }

    /**
     * Sets the value of the ultmtDbtr property.
     * 
     * @param value
     *     allowed object is
     *     {@link PartyIdentification32 }
     *     
     */
    public void setUltmtDbtr(PartyIdentification32 value) {
        this.ultmtDbtr = value;
    }

    /**
     * Gets the value of the instrForCdtrAgt property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "INSTRFORCDTRAGT", length = 140)
    public String getInstrForCdtrAgt() {
        return instrForCdtrAgt;
    }

    /**
     * Sets the value of the instrForCdtrAgt property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInstrForCdtrAgt(String value) {
        this.instrForCdtrAgt = value;
    }

    /**
     * Gets the value of the purp property.
     * 
     * @return
     *     possible object is
     *     {@link Purpose2Choice }
     *     
     */
    @ManyToOne(targetEntity = Purpose2Choice.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PURP_DIRECTDEBITTRANSACTIONI_1")
    public Purpose2Choice getPurp() {
        return purp;
    }

    /**
     * Sets the value of the purp property.
     * 
     * @param value
     *     allowed object is
     *     {@link Purpose2Choice }
     *     
     */
    public void setPurp(Purpose2Choice value) {
        this.purp = value;
    }

    /**
     * Gets the value of the rgltryRptgs property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the rgltryRptgs property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRgltryRptgs().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RegulatoryReporting3 }
     * 
     * 
     */
    @OneToMany(targetEntity = RegulatoryReporting3 .class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "RGLTRYRPTGS_DIRECTDEBITTRANS_0")
    public List<RegulatoryReporting3> getRgltryRptgs() {
        if (rgltryRptgs == null) {
            rgltryRptgs = new ArrayList<RegulatoryReporting3>();
        }
        return this.rgltryRptgs;
    }

    /**
     * 
     * 
     */
    public void setRgltryRptgs(List<RegulatoryReporting3> rgltryRptgs) {
        this.rgltryRptgs = rgltryRptgs;
    }

    /**
     * Gets the value of the tax property.
     * 
     * @return
     *     possible object is
     *     {@link TaxInformation3 }
     *     
     */
    @ManyToOne(targetEntity = TaxInformation3 .class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TAX_DIRECTDEBITTRANSACTIONIN_0")
    public TaxInformation3 getTax() {
        return tax;
    }

    /**
     * Sets the value of the tax property.
     * 
     * @param value
     *     allowed object is
     *     {@link TaxInformation3 }
     *     
     */
    public void setTax(TaxInformation3 value) {
        this.tax = value;
    }

    /**
     * Gets the value of the rltdRmtInves property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the rltdRmtInves property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRltdRmtInves().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RemittanceLocation2 }
     * 
     * 
     */
    @OneToMany(targetEntity = RemittanceLocation2 .class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "RLTDRMTINVES_DIRECTDEBITTRAN_0")
    public List<RemittanceLocation2> getRltdRmtInves() {
        if (rltdRmtInves == null) {
            rltdRmtInves = new ArrayList<RemittanceLocation2>();
        }
        return this.rltdRmtInves;
    }

    /**
     * 
     * 
     */
    public void setRltdRmtInves(List<RemittanceLocation2> rltdRmtInves) {
        this.rltdRmtInves = rltdRmtInves;
    }

    /**
     * Gets the value of the rmtInf property.
     * 
     * @return
     *     possible object is
     *     {@link RemittanceInformation5 }
     *     
     */
    @ManyToOne(targetEntity = RemittanceInformation5 .class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "RMTINF_DIRECTDEBITTRANSACTIO_1")
    public RemittanceInformation5 getRmtInf() {
        return rmtInf;
    }

    /**
     * Sets the value of the rmtInf property.
     * 
     * @param value
     *     allowed object is
     *     {@link RemittanceInformation5 }
     *     
     */
    public void setRmtInf(RemittanceInformation5 value) {
        this.rmtInf = value;
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof DirectDebitTransactionInformation9)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final DirectDebitTransactionInformation9 that = ((DirectDebitTransactionInformation9) object);
        {
            PaymentIdentification1 lhsPmtId;
            lhsPmtId = this.getPmtId();
            PaymentIdentification1 rhsPmtId;
            rhsPmtId = that.getPmtId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pmtId", lhsPmtId), LocatorUtils.property(thatLocator, "pmtId", rhsPmtId), lhsPmtId, rhsPmtId)) {
                return false;
            }
        }
        {
            PaymentTypeInformation20 lhsPmtTpInf;
            lhsPmtTpInf = this.getPmtTpInf();
            PaymentTypeInformation20 rhsPmtTpInf;
            rhsPmtTpInf = that.getPmtTpInf();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pmtTpInf", lhsPmtTpInf), LocatorUtils.property(thatLocator, "pmtTpInf", rhsPmtTpInf), lhsPmtTpInf, rhsPmtTpInf)) {
                return false;
            }
        }
        {
            ActiveOrHistoricCurrencyAndAmount lhsInstdAmt;
            lhsInstdAmt = this.getInstdAmt();
            ActiveOrHistoricCurrencyAndAmount rhsInstdAmt;
            rhsInstdAmt = that.getInstdAmt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "instdAmt", lhsInstdAmt), LocatorUtils.property(thatLocator, "instdAmt", rhsInstdAmt), lhsInstdAmt, rhsInstdAmt)) {
                return false;
            }
        }
        {
            ChargeBearerType1Code lhsChrgBr;
            lhsChrgBr = this.getChrgBr();
            ChargeBearerType1Code rhsChrgBr;
            rhsChrgBr = that.getChrgBr();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "chrgBr", lhsChrgBr), LocatorUtils.property(thatLocator, "chrgBr", rhsChrgBr), lhsChrgBr, rhsChrgBr)) {
                return false;
            }
        }
        {
            DirectDebitTransaction6 lhsDrctDbtTx;
            lhsDrctDbtTx = this.getDrctDbtTx();
            DirectDebitTransaction6 rhsDrctDbtTx;
            rhsDrctDbtTx = that.getDrctDbtTx();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "drctDbtTx", lhsDrctDbtTx), LocatorUtils.property(thatLocator, "drctDbtTx", rhsDrctDbtTx), lhsDrctDbtTx, rhsDrctDbtTx)) {
                return false;
            }
        }
        {
            PartyIdentification32 lhsUltmtCdtr;
            lhsUltmtCdtr = this.getUltmtCdtr();
            PartyIdentification32 rhsUltmtCdtr;
            rhsUltmtCdtr = that.getUltmtCdtr();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ultmtCdtr", lhsUltmtCdtr), LocatorUtils.property(thatLocator, "ultmtCdtr", rhsUltmtCdtr), lhsUltmtCdtr, rhsUltmtCdtr)) {
                return false;
            }
        }
        {
            BranchAndFinancialInstitutionIdentification4 lhsDbtrAgt;
            lhsDbtrAgt = this.getDbtrAgt();
            BranchAndFinancialInstitutionIdentification4 rhsDbtrAgt;
            rhsDbtrAgt = that.getDbtrAgt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dbtrAgt", lhsDbtrAgt), LocatorUtils.property(thatLocator, "dbtrAgt", rhsDbtrAgt), lhsDbtrAgt, rhsDbtrAgt)) {
                return false;
            }
        }
        {
            CashAccount16 lhsDbtrAgtAcct;
            lhsDbtrAgtAcct = this.getDbtrAgtAcct();
            CashAccount16 rhsDbtrAgtAcct;
            rhsDbtrAgtAcct = that.getDbtrAgtAcct();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dbtrAgtAcct", lhsDbtrAgtAcct), LocatorUtils.property(thatLocator, "dbtrAgtAcct", rhsDbtrAgtAcct), lhsDbtrAgtAcct, rhsDbtrAgtAcct)) {
                return false;
            }
        }
        {
            PartyIdentification32 lhsDbtr;
            lhsDbtr = this.getDbtr();
            PartyIdentification32 rhsDbtr;
            rhsDbtr = that.getDbtr();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dbtr", lhsDbtr), LocatorUtils.property(thatLocator, "dbtr", rhsDbtr), lhsDbtr, rhsDbtr)) {
                return false;
            }
        }
        {
            CashAccount16 lhsDbtrAcct;
            lhsDbtrAcct = this.getDbtrAcct();
            CashAccount16 rhsDbtrAcct;
            rhsDbtrAcct = that.getDbtrAcct();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dbtrAcct", lhsDbtrAcct), LocatorUtils.property(thatLocator, "dbtrAcct", rhsDbtrAcct), lhsDbtrAcct, rhsDbtrAcct)) {
                return false;
            }
        }
        {
            PartyIdentification32 lhsUltmtDbtr;
            lhsUltmtDbtr = this.getUltmtDbtr();
            PartyIdentification32 rhsUltmtDbtr;
            rhsUltmtDbtr = that.getUltmtDbtr();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ultmtDbtr", lhsUltmtDbtr), LocatorUtils.property(thatLocator, "ultmtDbtr", rhsUltmtDbtr), lhsUltmtDbtr, rhsUltmtDbtr)) {
                return false;
            }
        }
        {
            String lhsInstrForCdtrAgt;
            lhsInstrForCdtrAgt = this.getInstrForCdtrAgt();
            String rhsInstrForCdtrAgt;
            rhsInstrForCdtrAgt = that.getInstrForCdtrAgt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "instrForCdtrAgt", lhsInstrForCdtrAgt), LocatorUtils.property(thatLocator, "instrForCdtrAgt", rhsInstrForCdtrAgt), lhsInstrForCdtrAgt, rhsInstrForCdtrAgt)) {
                return false;
            }
        }
        {
            Purpose2Choice lhsPurp;
            lhsPurp = this.getPurp();
            Purpose2Choice rhsPurp;
            rhsPurp = that.getPurp();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "purp", lhsPurp), LocatorUtils.property(thatLocator, "purp", rhsPurp), lhsPurp, rhsPurp)) {
                return false;
            }
        }
        {
            List<RegulatoryReporting3> lhsRgltryRptgs;
            lhsRgltryRptgs = (((this.rgltryRptgs!= null)&&(!this.rgltryRptgs.isEmpty()))?this.getRgltryRptgs():null);
            List<RegulatoryReporting3> rhsRgltryRptgs;
            rhsRgltryRptgs = (((that.rgltryRptgs!= null)&&(!that.rgltryRptgs.isEmpty()))?that.getRgltryRptgs():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rgltryRptgs", lhsRgltryRptgs), LocatorUtils.property(thatLocator, "rgltryRptgs", rhsRgltryRptgs), lhsRgltryRptgs, rhsRgltryRptgs)) {
                return false;
            }
        }
        {
            TaxInformation3 lhsTax;
            lhsTax = this.getTax();
            TaxInformation3 rhsTax;
            rhsTax = that.getTax();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tax", lhsTax), LocatorUtils.property(thatLocator, "tax", rhsTax), lhsTax, rhsTax)) {
                return false;
            }
        }
        {
            List<RemittanceLocation2> lhsRltdRmtInves;
            lhsRltdRmtInves = (((this.rltdRmtInves!= null)&&(!this.rltdRmtInves.isEmpty()))?this.getRltdRmtInves():null);
            List<RemittanceLocation2> rhsRltdRmtInves;
            rhsRltdRmtInves = (((that.rltdRmtInves!= null)&&(!that.rltdRmtInves.isEmpty()))?that.getRltdRmtInves():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rltdRmtInves", lhsRltdRmtInves), LocatorUtils.property(thatLocator, "rltdRmtInves", rhsRltdRmtInves), lhsRltdRmtInves, rhsRltdRmtInves)) {
                return false;
            }
        }
        {
            RemittanceInformation5 lhsRmtInf;
            lhsRmtInf = this.getRmtInf();
            RemittanceInformation5 rhsRmtInf;
            rhsRmtInf = that.getRmtInf();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rmtInf", lhsRmtInf), LocatorUtils.property(thatLocator, "rmtInf", rhsRmtInf), lhsRmtInf, rhsRmtInf)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            PaymentIdentification1 thePmtId;
            thePmtId = this.getPmtId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pmtId", thePmtId), currentHashCode, thePmtId);
        }
        {
            PaymentTypeInformation20 thePmtTpInf;
            thePmtTpInf = this.getPmtTpInf();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pmtTpInf", thePmtTpInf), currentHashCode, thePmtTpInf);
        }
        {
            ActiveOrHistoricCurrencyAndAmount theInstdAmt;
            theInstdAmt = this.getInstdAmt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "instdAmt", theInstdAmt), currentHashCode, theInstdAmt);
        }
        {
            ChargeBearerType1Code theChrgBr;
            theChrgBr = this.getChrgBr();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "chrgBr", theChrgBr), currentHashCode, theChrgBr);
        }
        {
            DirectDebitTransaction6 theDrctDbtTx;
            theDrctDbtTx = this.getDrctDbtTx();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "drctDbtTx", theDrctDbtTx), currentHashCode, theDrctDbtTx);
        }
        {
            PartyIdentification32 theUltmtCdtr;
            theUltmtCdtr = this.getUltmtCdtr();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ultmtCdtr", theUltmtCdtr), currentHashCode, theUltmtCdtr);
        }
        {
            BranchAndFinancialInstitutionIdentification4 theDbtrAgt;
            theDbtrAgt = this.getDbtrAgt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dbtrAgt", theDbtrAgt), currentHashCode, theDbtrAgt);
        }
        {
            CashAccount16 theDbtrAgtAcct;
            theDbtrAgtAcct = this.getDbtrAgtAcct();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dbtrAgtAcct", theDbtrAgtAcct), currentHashCode, theDbtrAgtAcct);
        }
        {
            PartyIdentification32 theDbtr;
            theDbtr = this.getDbtr();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dbtr", theDbtr), currentHashCode, theDbtr);
        }
        {
            CashAccount16 theDbtrAcct;
            theDbtrAcct = this.getDbtrAcct();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dbtrAcct", theDbtrAcct), currentHashCode, theDbtrAcct);
        }
        {
            PartyIdentification32 theUltmtDbtr;
            theUltmtDbtr = this.getUltmtDbtr();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ultmtDbtr", theUltmtDbtr), currentHashCode, theUltmtDbtr);
        }
        {
            String theInstrForCdtrAgt;
            theInstrForCdtrAgt = this.getInstrForCdtrAgt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "instrForCdtrAgt", theInstrForCdtrAgt), currentHashCode, theInstrForCdtrAgt);
        }
        {
            Purpose2Choice thePurp;
            thePurp = this.getPurp();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "purp", thePurp), currentHashCode, thePurp);
        }
        {
            List<RegulatoryReporting3> theRgltryRptgs;
            theRgltryRptgs = (((this.rgltryRptgs!= null)&&(!this.rgltryRptgs.isEmpty()))?this.getRgltryRptgs():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rgltryRptgs", theRgltryRptgs), currentHashCode, theRgltryRptgs);
        }
        {
            TaxInformation3 theTax;
            theTax = this.getTax();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tax", theTax), currentHashCode, theTax);
        }
        {
            List<RemittanceLocation2> theRltdRmtInves;
            theRltdRmtInves = (((this.rltdRmtInves!= null)&&(!this.rltdRmtInves.isEmpty()))?this.getRltdRmtInves():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rltdRmtInves", theRltdRmtInves), currentHashCode, theRltdRmtInves);
        }
        {
            RemittanceInformation5 theRmtInf;
            theRmtInf = this.getRmtInf();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rmtInf", theRmtInf), currentHashCode, theRmtInf);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
