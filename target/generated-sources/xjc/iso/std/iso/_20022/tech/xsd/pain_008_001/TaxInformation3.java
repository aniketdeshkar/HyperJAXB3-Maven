//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.06.01 at 02:41:38 PM IST 
//


package iso.std.iso._20022.tech.xsd.pain_008_001;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XMLGregorianCalendarAsDate;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XmlAdapterUtils;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for TaxInformation3 complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TaxInformation3">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="Cdtr" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}TaxParty1" minOccurs="0"/>
 *         &lt;element name="Dbtr" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}TaxParty2" minOccurs="0"/>
 *         &lt;element name="AdmstnZn" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}Max35Text" minOccurs="0"/>
 *         &lt;element name="RefNb" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}Max140Text" minOccurs="0"/>
 *         &lt;element name="Mtd" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}Max35Text" minOccurs="0"/>
 *         &lt;element name="TtlTaxblBaseAmt" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}ActiveOrHistoricCurrencyAndAmount" minOccurs="0"/>
 *         &lt;element name="TtlTaxAmt" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}ActiveOrHistoricCurrencyAndAmount" minOccurs="0"/>
 *         &lt;element name="Dt" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}ISODate" minOccurs="0"/>
 *         &lt;element name="SeqNb" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}Number" minOccurs="0"/>
 *         &lt;element name="Rcrd" type="{urn:iso:std:iso:20022:tech:xsd:pain.008.001.02}TaxRecord1" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TaxInformation3", propOrder = {
    "cdtr",
    "dbtr",
    "admstnZn",
    "refNb",
    "mtd",
    "ttlTaxblBaseAmt",
    "ttlTaxAmt",
    "dt",
    "seqNb",
    "rcrds"
})
@Entity(name = "TaxInformation3")
@Table(name = "TAXINFORMATION3_0")
@Inheritance(strategy = InheritanceType.JOINED)
public class TaxInformation3
    implements Serializable, Equals, HashCode
{

    @XmlElement(name = "Cdtr")
    protected TaxParty1 cdtr;
    @XmlElement(name = "Dbtr")
    protected TaxParty2 dbtr;
    @XmlElement(name = "AdmstnZn")
    protected String admstnZn;
    @XmlElement(name = "RefNb")
    protected String refNb;
    @XmlElement(name = "Mtd")
    protected String mtd;
    @XmlElement(name = "TtlTaxblBaseAmt")
    protected ActiveOrHistoricCurrencyAndAmount ttlTaxblBaseAmt;
    @XmlElement(name = "TtlTaxAmt")
    protected ActiveOrHistoricCurrencyAndAmount ttlTaxAmt;
    @XmlElement(name = "Dt")
    protected XMLGregorianCalendar dt;
    @XmlElement(name = "SeqNb")
    protected BigDecimal seqNb;
    @XmlElement(name = "Rcrd")
    protected List<TaxRecord1> rcrds;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;

    /**
     * Gets the value of the cdtr property.
     * 
     * @return
     *     possible object is
     *     {@link TaxParty1 }
     *     
     */
    @ManyToOne(targetEntity = TaxParty1 .class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CDTR_TAXINFORMATION3_0_HJID")
    public TaxParty1 getCdtr() {
        return cdtr;
    }

    /**
     * Sets the value of the cdtr property.
     * 
     * @param value
     *     allowed object is
     *     {@link TaxParty1 }
     *     
     */
    public void setCdtr(TaxParty1 value) {
        this.cdtr = value;
    }

    /**
     * Gets the value of the dbtr property.
     * 
     * @return
     *     possible object is
     *     {@link TaxParty2 }
     *     
     */
    @ManyToOne(targetEntity = TaxParty2 .class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DBTR_TAXINFORMATION3_0_HJID")
    public TaxParty2 getDbtr() {
        return dbtr;
    }

    /**
     * Sets the value of the dbtr property.
     * 
     * @param value
     *     allowed object is
     *     {@link TaxParty2 }
     *     
     */
    public void setDbtr(TaxParty2 value) {
        this.dbtr = value;
    }

    /**
     * Gets the value of the admstnZn property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ADMSTNZN", length = 35)
    public String getAdmstnZn() {
        return admstnZn;
    }

    /**
     * Sets the value of the admstnZn property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAdmstnZn(String value) {
        this.admstnZn = value;
    }

    /**
     * Gets the value of the refNb property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "REFNB", length = 140)
    public String getRefNb() {
        return refNb;
    }

    /**
     * Sets the value of the refNb property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRefNb(String value) {
        this.refNb = value;
    }

    /**
     * Gets the value of the mtd property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MTD", length = 35)
    public String getMtd() {
        return mtd;
    }

    /**
     * Sets the value of the mtd property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMtd(String value) {
        this.mtd = value;
    }

    /**
     * Gets the value of the ttlTaxblBaseAmt property.
     * 
     * @return
     *     possible object is
     *     {@link ActiveOrHistoricCurrencyAndAmount }
     *     
     */
    @ManyToOne(targetEntity = ActiveOrHistoricCurrencyAndAmount.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TTLTAXBLBASEAMT_TAXINFORMATI_1")
    public ActiveOrHistoricCurrencyAndAmount getTtlTaxblBaseAmt() {
        return ttlTaxblBaseAmt;
    }

    /**
     * Sets the value of the ttlTaxblBaseAmt property.
     * 
     * @param value
     *     allowed object is
     *     {@link ActiveOrHistoricCurrencyAndAmount }
     *     
     */
    public void setTtlTaxblBaseAmt(ActiveOrHistoricCurrencyAndAmount value) {
        this.ttlTaxblBaseAmt = value;
    }

    /**
     * Gets the value of the ttlTaxAmt property.
     * 
     * @return
     *     possible object is
     *     {@link ActiveOrHistoricCurrencyAndAmount }
     *     
     */
    @ManyToOne(targetEntity = ActiveOrHistoricCurrencyAndAmount.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TTLTAXAMT_TAXINFORMATION3_0__0")
    public ActiveOrHistoricCurrencyAndAmount getTtlTaxAmt() {
        return ttlTaxAmt;
    }

    /**
     * Sets the value of the ttlTaxAmt property.
     * 
     * @param value
     *     allowed object is
     *     {@link ActiveOrHistoricCurrencyAndAmount }
     *     
     */
    public void setTtlTaxAmt(ActiveOrHistoricCurrencyAndAmount value) {
        this.ttlTaxAmt = value;
    }

    /**
     * Gets the value of the dt property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    @Transient
    public XMLGregorianCalendar getDt() {
        return dt;
    }

    /**
     * Sets the value of the dt property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setDt(XMLGregorianCalendar value) {
        this.dt = value;
    }

    /**
     * Gets the value of the seqNb property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "SEQNB", precision = 18, scale = 10)
    public BigDecimal getSeqNb() {
        return seqNb;
    }

    /**
     * Sets the value of the seqNb property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setSeqNb(BigDecimal value) {
        this.seqNb = value;
    }

    /**
     * Gets the value of the rcrds property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the rcrds property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRcrds().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TaxRecord1 }
     * 
     * 
     */
    @OneToMany(targetEntity = TaxRecord1 .class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "RCRDS_TAXINFORMATION3_0_HJID")
    public List<TaxRecord1> getRcrds() {
        if (rcrds == null) {
            rcrds = new ArrayList<TaxRecord1>();
        }
        return this.rcrds;
    }

    /**
     * 
     * 
     */
    public void setRcrds(List<TaxRecord1> rcrds) {
        this.rcrds = rcrds;
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    @Basic
    @Column(name = "DTITEM")
    @Temporal(TemporalType.DATE)
    public Date getDtItem() {
        return XmlAdapterUtils.unmarshall(XMLGregorianCalendarAsDate.class, this.getDt());
    }

    public void setDtItem(Date target) {
        setDt(XmlAdapterUtils.marshall(XMLGregorianCalendarAsDate.class, target));
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TaxInformation3)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final TaxInformation3 that = ((TaxInformation3) object);
        {
            TaxParty1 lhsCdtr;
            lhsCdtr = this.getCdtr();
            TaxParty1 rhsCdtr;
            rhsCdtr = that.getCdtr();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cdtr", lhsCdtr), LocatorUtils.property(thatLocator, "cdtr", rhsCdtr), lhsCdtr, rhsCdtr)) {
                return false;
            }
        }
        {
            TaxParty2 lhsDbtr;
            lhsDbtr = this.getDbtr();
            TaxParty2 rhsDbtr;
            rhsDbtr = that.getDbtr();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dbtr", lhsDbtr), LocatorUtils.property(thatLocator, "dbtr", rhsDbtr), lhsDbtr, rhsDbtr)) {
                return false;
            }
        }
        {
            String lhsAdmstnZn;
            lhsAdmstnZn = this.getAdmstnZn();
            String rhsAdmstnZn;
            rhsAdmstnZn = that.getAdmstnZn();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "admstnZn", lhsAdmstnZn), LocatorUtils.property(thatLocator, "admstnZn", rhsAdmstnZn), lhsAdmstnZn, rhsAdmstnZn)) {
                return false;
            }
        }
        {
            String lhsRefNb;
            lhsRefNb = this.getRefNb();
            String rhsRefNb;
            rhsRefNb = that.getRefNb();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "refNb", lhsRefNb), LocatorUtils.property(thatLocator, "refNb", rhsRefNb), lhsRefNb, rhsRefNb)) {
                return false;
            }
        }
        {
            String lhsMtd;
            lhsMtd = this.getMtd();
            String rhsMtd;
            rhsMtd = that.getMtd();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mtd", lhsMtd), LocatorUtils.property(thatLocator, "mtd", rhsMtd), lhsMtd, rhsMtd)) {
                return false;
            }
        }
        {
            ActiveOrHistoricCurrencyAndAmount lhsTtlTaxblBaseAmt;
            lhsTtlTaxblBaseAmt = this.getTtlTaxblBaseAmt();
            ActiveOrHistoricCurrencyAndAmount rhsTtlTaxblBaseAmt;
            rhsTtlTaxblBaseAmt = that.getTtlTaxblBaseAmt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ttlTaxblBaseAmt", lhsTtlTaxblBaseAmt), LocatorUtils.property(thatLocator, "ttlTaxblBaseAmt", rhsTtlTaxblBaseAmt), lhsTtlTaxblBaseAmt, rhsTtlTaxblBaseAmt)) {
                return false;
            }
        }
        {
            ActiveOrHistoricCurrencyAndAmount lhsTtlTaxAmt;
            lhsTtlTaxAmt = this.getTtlTaxAmt();
            ActiveOrHistoricCurrencyAndAmount rhsTtlTaxAmt;
            rhsTtlTaxAmt = that.getTtlTaxAmt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ttlTaxAmt", lhsTtlTaxAmt), LocatorUtils.property(thatLocator, "ttlTaxAmt", rhsTtlTaxAmt), lhsTtlTaxAmt, rhsTtlTaxAmt)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsDt;
            lhsDt = this.getDt();
            XMLGregorianCalendar rhsDt;
            rhsDt = that.getDt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dt", lhsDt), LocatorUtils.property(thatLocator, "dt", rhsDt), lhsDt, rhsDt)) {
                return false;
            }
        }
        {
            BigDecimal lhsSeqNb;
            lhsSeqNb = this.getSeqNb();
            BigDecimal rhsSeqNb;
            rhsSeqNb = that.getSeqNb();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "seqNb", lhsSeqNb), LocatorUtils.property(thatLocator, "seqNb", rhsSeqNb), lhsSeqNb, rhsSeqNb)) {
                return false;
            }
        }
        {
            List<TaxRecord1> lhsRcrds;
            lhsRcrds = (((this.rcrds!= null)&&(!this.rcrds.isEmpty()))?this.getRcrds():null);
            List<TaxRecord1> rhsRcrds;
            rhsRcrds = (((that.rcrds!= null)&&(!that.rcrds.isEmpty()))?that.getRcrds():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rcrds", lhsRcrds), LocatorUtils.property(thatLocator, "rcrds", rhsRcrds), lhsRcrds, rhsRcrds)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            TaxParty1 theCdtr;
            theCdtr = this.getCdtr();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cdtr", theCdtr), currentHashCode, theCdtr);
        }
        {
            TaxParty2 theDbtr;
            theDbtr = this.getDbtr();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dbtr", theDbtr), currentHashCode, theDbtr);
        }
        {
            String theAdmstnZn;
            theAdmstnZn = this.getAdmstnZn();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "admstnZn", theAdmstnZn), currentHashCode, theAdmstnZn);
        }
        {
            String theRefNb;
            theRefNb = this.getRefNb();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "refNb", theRefNb), currentHashCode, theRefNb);
        }
        {
            String theMtd;
            theMtd = this.getMtd();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mtd", theMtd), currentHashCode, theMtd);
        }
        {
            ActiveOrHistoricCurrencyAndAmount theTtlTaxblBaseAmt;
            theTtlTaxblBaseAmt = this.getTtlTaxblBaseAmt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ttlTaxblBaseAmt", theTtlTaxblBaseAmt), currentHashCode, theTtlTaxblBaseAmt);
        }
        {
            ActiveOrHistoricCurrencyAndAmount theTtlTaxAmt;
            theTtlTaxAmt = this.getTtlTaxAmt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ttlTaxAmt", theTtlTaxAmt), currentHashCode, theTtlTaxAmt);
        }
        {
            XMLGregorianCalendar theDt;
            theDt = this.getDt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dt", theDt), currentHashCode, theDt);
        }
        {
            BigDecimal theSeqNb;
            theSeqNb = this.getSeqNb();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "seqNb", theSeqNb), currentHashCode, theSeqNb);
        }
        {
            List<TaxRecord1> theRcrds;
            theRcrds = (((this.rcrds!= null)&&(!this.rcrds.isEmpty()))?this.getRcrds():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rcrds", theRcrds), currentHashCode, theRcrds);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
